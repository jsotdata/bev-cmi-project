function BatteryHV_loadSimulationCase_Charge(nvpairs)
%% Sets up simulation
% This function sets up the followings:
% - Simulation stop time
% - Input signals
% - Initial conditions
%
% Model must be loaded for this function to work.

% Copyright 2023 The MathWorks, Inc.

arguments
  % Negative value for charge
  nvpairs.CRate (1,1) double = -0.5
  nvpairs.StateOfCharge_pct (1,1) {mustBeInRange(nvpairs.StateOfCharge_pct, 0, 100)} = 50
end

t_end = 3600;

nominalCharge_Ahr = evalin("base", "batteryHV.nominalCharge_Ahr");
loadCurrent_A = nvpairs.CRate * nominalCharge_Ahr;

SOC_ini = nvpairs.StateOfCharge_pct;

BatteryHV_loadSimulationCase( ...
  CaseName = "Charge battery", ...
  ModelName = "BatteryHV_harness_model", ...
  StopTime = t_end, ...
  InputSystemPath = "/Inputs", ...
  LoadCurrentBlockName = "Load current", ...
  LoadCurrentDataPoints = [0, t_end, loadCurrent_A], ...
  LoadCurrentDeltaT = 0.2, ...
  HeatFlowBlockName = "Heat flow", ...
  HeatFlowDataPoints = [0 1 -1], ... Watt
  HeatFlowDeltaT = 1, ... sec
  TerminalVoltage_V = evalin("base", "batteryHV.nominalVoltage_V"), ...
  NominalCapacity_kWh = evalin("base", "batteryHV.nominalCapacity_kWh"), ...
  InitialSOC_pct = SOC_ini, ...
  InitialBatteryTemperature_K = 273.15 + 20, ...
  InitialAmbientTemperature_K = 273.15 + 20, ...
  DisplayMessage = true );

end  % function
